{"ast":null,"code":"var _jsxFileName = \"/home/hasael/Desktop/belajar-react js/how-class-work/01-starting-project/src/components/Users.js\";\nimport { Component } from \"react\";\nimport User from \"./User\";\nimport classes from \"./Users.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Users extends Component {\n  // cara menggunakan useState didalam class\n  // disini kita menggunakan constructor\n\n  constructor() {\n    // saat kita menggunakan constructor kita harus memanggil even super()\n    super();\n    // penulisan state itu bebas tergantung anda akan tetapi akan lebi bagus jika penulisan nya kita sama kan dengan nama useState agar kita lebih mudah paham\n    //\n    this.state = {\n      showUsers: true,\n      more: \"Test\"\n    };\n  }\n\n  // cara menggunakan this.state\n  toggleUsersHandler() {\n    this.setState(curState => {\n      // bisa dibanding kan dengan fungsi const yang dibawah perbedaan penggunaan state\n      //disini fungsi curState tidak menimpah showUsers melaikan menggabungkan\n      return {\n        showUsers: !curState.showUsers\n      };\n    });\n  }\n  render() {\n    const usersList = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.props.users.map(user => /*#__PURE__*/_jsxDEV(User, {\n        name: user.name\n      }, user.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.users,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleUsersHandler(this),\n        children: [this.state.showUsers ? \"Hide\" : \"Show\", \" Users\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), this.showUsers && usersList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;","map":{"version":3,"names":["Component","User","classes","Users","constructor","state","showUsers","more","toggleUsersHandler","setState","curState","render","usersList","props","users","map","user","name","id"],"sources":["/home/hasael/Desktop/belajar-react js/how-class-work/01-starting-project/src/components/Users.js"],"sourcesContent":["import { Component } from \"react\";\nimport User from \"./User\";\n\nimport classes from \"./Users.module.css\";\n\nclass Users extends Component {\n  // cara menggunakan useState didalam class\n  // disini kita menggunakan constructor\n\n  constructor() {\n    // saat kita menggunakan constructor kita harus memanggil even super()\n    super();\n    // penulisan state itu bebas tergantung anda akan tetapi akan lebi bagus jika penulisan nya kita sama kan dengan nama useState agar kita lebih mudah paham\n    //\n    this.state = {\n      showUsers: true,\n      more: \"Test\",\n    };\n  }\n\n  // cara menggunakan this.state\n  toggleUsersHandler() {\n    this.setState((curState) => {\n      // bisa dibanding kan dengan fungsi const yang dibawah perbedaan penggunaan state\n      //disini fungsi curState tidak menimpah showUsers melaikan menggabungkan\n      return { showUsers: !curState.showUsers };\n    });\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {this.props.users.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler(this)}>\n          {this.state.showUsers ? \"Hide\" : \"Show\"} Users\n        </button>\n        {this.showUsers && usersList}\n      </div>\n    );\n  }\n}\n\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n//   const usersList = (\n//     <ul>\n//       {DUMMY_USERS.map((user) => (\n//         <User key={user.id} name={user.name} />\n//       ))}\n//     </ul>\n//   );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={toggleUsersHandler}>\n//         {showUsers ? 'Hide' : 'Show'} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,IAAI,MAAM,QAAQ;AAEzB,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,KAAK,SAASH,SAAS,CAAC;EAC5B;EACA;;EAEAI,WAAW,GAAG;IACZ;IACA,KAAK,EAAE;IACP;IACA;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,SAAS,EAAE,IAAI;MACfC,IAAI,EAAE;IACR,CAAC;EACH;;EAEA;EACAC,kBAAkB,GAAG;IACnB,IAAI,CAACC,QAAQ,CAAEC,QAAQ,IAAK;MAC1B;MACA;MACA,OAAO;QAAEJ,SAAS,EAAE,CAACI,QAAQ,CAACJ;MAAU,CAAC;IAC3C,CAAC,CAAC;EACJ;EAEAK,MAAM,GAAG;IACP,MAAMC,SAAS,gBACb;MAAA,UACG,IAAI,CAACC,KAAK,CAACC,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACzB,QAAC,IAAI;QAAe,IAAI,EAAEA,IAAI,CAACC;MAAK,GAAzBD,IAAI,CAACE,EAAE;QAAA;QAAA;QAAA;MAAA,QACnB;IAAC;MAAA;MAAA;MAAA;IAAA,QAEL;IAED,oBACE;MAAK,SAAS,EAAEhB,OAAO,CAACY,KAAM;MAAA,wBAC5B;QAAQ,OAAO,EAAE,IAAI,CAACN,kBAAkB,CAAC,IAAI,CAAE;QAAA,WAC5C,IAAI,CAACH,KAAK,CAACC,SAAS,GAAG,MAAM,GAAG,MAAM,EAAC,QAC1C;MAAA;QAAA;QAAA;QAAA;MAAA,QAAS,EACR,IAAI,CAACA,SAAS,IAAIM,SAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACxB;EAEV;AACF;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeT,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}